name: CI

on: [push, pull_request]

defaults:
  runs-on: ubuntu-latest
  container:
    image: ghcr.io/php-actions/php-build:v1

  services:
    mysql:
      image: mysql:5.7
      env:
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
        MYSQL_DATABASE: phproject
      ports:
        - 3306
      options: >-
        --health-cmd "mysqladmin ping"
        --health-interval 10s
        --health-timeout 5s
        --health-retries 3

  steps:
  - uses: actions/checkout@v2

  - uses: actions/cache@v2
    env:
      cache-name: cache-composer
    with:
      path: ~/.composer
      key: ${{ runner.os }}-ci-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
      restore-keys: |
        ${{ runner.os }}-ci-${{ env.cache-name }}-
        ${{ runner.os }}-ci-
        ${{ runner.os }}-

  - run: switch-php-version $PHP_VERSION

  - name: Syntax check
    run: if find . -name "*.php" ! -path "./vendor/*" -exec php -l {} 2>&1 \; | grep "syntax error, unexpected"; then exit 1; fi

  - name: Composer
    run: |
      curl -o composer.phar -L https://getcomposer.org/composer-stable.phar
      php composer.phar install --no-ansi --no-interaction

  - run: vendor/bin/phpcs

  - name: Install Phproject
    run: php install.php --site-name=Test --site-url=http://localhost/ --timezone=America/Phoenix --admin-username=test --admin-email=test@example.com --admin-password=secret --db-host=mysql --db-user=root

  - name: PHPUnit
    if: ${{ env.PHP_VERSION != 7.1 }}
    run: |
      curl -o phpunit.phar -L https://phar.phpunit.de/phpunit-8.phar
      php phpunit.phar

jobs:
  php71:
    env:
      PHP_VERSION: 7.1

  php72:
    env:
      PHP_VERSION: 7.2

  php73:
    env:
      PHP_VERSION: 7.3

  php74:
    env:
      PHP_VERSION: 7.4

  php80:
    env:
      PHP_VERSION: 8.0
